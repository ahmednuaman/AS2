/*	@author:		Ahmed Nuaman (ahmedn@google.com)	@description:	Creates movieclips depending on poll results and can support multiple columns (INCOMPLETE)	@last-update:	18/11/2008 09:41	@usage:			var poll:MovieClip = parent.createEmptyMovieClip('poll',parent.getNextHighestDepth());					var randomiser:TZYouTubePollRandomiser = new TZYouTubePollRandomiser(poll,player);					var agree:Array = [ ];					var disagree:Array = [ ];						randomiser.init([ agree, disagree ],parent._width,parent._height);*/import com.tangozebra.display.TZRandomiser;import com.tangozebra.display.TZObjImages;import com.tangozebra.display.TZObjTest;import com.tangozebra.utils.TZTrace;import com.tangozebra.youtube.TZYouTubeData;import com.tangozebra.youtube.TZYouTubePlayer;import com.tangozebra.youtube.TZYouTubeThumbs;import mx.utils.Delegate;class com.tangozebra.youtube.TZYouTubePollRandomiser {	public static var NAME:String								= 'TZYouTubePollRandomiser';		private var colWidth:Number									= 600;	private var colHeight:Number								= 100;		private var player:TZYouTubePlayer;	private var parent:MovieClip;		public function TZYouTubePollRandomiser(parent:MovieClip,player:TZYouTubePlayer)	{		TZTrace.info(NAME + ' created');				this.player = player;		this.parent = parent;	}		public function init(collection:Array,colWidth:Number,colHeight:Number):Void	{		var col:MovieClip;				TZTrace.info(NAME + '  creating cols');				this.colWidth = colWidth = colWidth / collection.length;		this.colHeight = colHeight;				for (var i:Number = 0; i < collection.length; i++)		{			col = parent.createEmptyMovieClip(NAME + 'Col' + (new Date().getTime()),parent.getNextHighestDepth());						TZTrace.info(NAME + ' created col');						with (col)			{				beginFill(0x000000,0);				moveTo(0,0);				lineTo(colWidth,0);				lineTo(colWidth,colHeight);				lineTo(0,colHeight);				lineTo(0,0);				endFill();			}							col._x = col._width * i;						drawClips(collection[i],col,(!i ? 1 : 0));		}	}		private function drawClips(mcs:Array,parent:MovieClip,align:Number):Void	{		var tzYtData:TZYouTubeData = new TZYouTubeData();				//tzYtData.init(requestURL,Delegate.create(this,handleResult),Delegate.create(this,handleError),{ mcs: mcs, parent: parent, align: align });	} 		private function handleResult(e:Object,params:Object):Void	{		var tzYtThumbs:TZYouTubeThumbs = new TZYouTubeThumbs();		var tzImageObj:TZObjImages = new TZObjImages();		var tzTestObj:TZObjTest = new TZObjTest();		var tzRandomiser:TZRandomiser = new TZRandomiser();		var entries:Array = e.ut_response.entry_list.entry;		var images:Array = [ ];				for (var i:Number = 0; i < params.mcs.length; i++)		{			images.push(entries[i].video_id.data);		}				tzImageObj.imageSourceArray = images;		tzImageObj.imageFunction = Delegate.create(tzYtThumbs,tzYtThumbs.create);		tzImageObj.noImageFunction = Delegate.create(tzTestObj,tzTestObj.create);		tzImageObj.player = player;				tzRandomiser.maxWidth = colWidth;		tzRandomiser.maxHeight = colHeight;			tzRandomiser.stageAlignPointX = params.align;				tzRandomiser.init(params.mcs,params.parent,Delegate.create(tzImageObj,tzImageObj.create)); 	}		private function handleError():Void	{		TZTrace.info(NAME + ' images data error');	}}